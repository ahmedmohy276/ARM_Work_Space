   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"SYSTICK_program.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MSTK_voidInit,"ax",%progbits
  16              		.align	1
  17              		.global	MSTK_voidInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MSTK_voidInit:
  24              	.LFB0:
  25              		.file 1 "../src/SYSTICK_program.c"
   1:../src/SYSTICK_program.c **** /*****************************************************************************/
   2:../src/SYSTICK_program.c **** /* Author    : Ahmed Mohy													 */
   3:../src/SYSTICK_program.c **** /* Date      : 28 DEC 2021													 */
   4:../src/SYSTICK_program.c **** /* Version   : V01														     */
   5:../src/SYSTICK_program.c **** /*****************************************************************************/
   6:../src/SYSTICK_program.c **** 
   7:../src/SYSTICK_program.c **** 
   8:../src/SYSTICK_program.c **** #include "STD_TYPES.h"
   9:../src/SYSTICK_program.c **** #include "BIT_MATH.h"
  10:../src/SYSTICK_program.c **** 
  11:../src/SYSTICK_program.c **** 
  12:../src/SYSTICK_program.c **** #include "SYSTICK_interface.h"
  13:../src/SYSTICK_program.c **** #include "SYSTICK_config.h"
  14:../src/SYSTICK_program.c **** #include "SYSTICK_private.h"
  15:../src/SYSTICK_program.c **** 
  16:../src/SYSTICK_program.c **** 
  17:../src/SYSTICK_program.c **** 
  18:../src/SYSTICK_program.c **** 
  19:../src/SYSTICK_program.c **** /* function to -----> Initiate STK cloclK , Disable SysTick , Disable SysTick interrupt */
  20:../src/SYSTICK_program.c **** void MSTK_voidInit(void)
  21:../src/SYSTICK_program.c **** {
  26              		.loc 1 21 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  22:../src/SYSTICK_program.c **** 	#if		SYSTICK_CLOCK_SOURCE == AHB_CLOCK 
  23:../src/SYSTICK_program.c **** 		SYSTICK->CTRL = 0X00000004;				/*Set STK cloclK to AHP , Disable SysTick , Disable SysTick interr
  24:../src/SYSTICK_program.c **** 	
  25:../src/SYSTICK_program.c **** 	#elif	SYSTICK_CLOCK_SOURCE == AHB_CLOCK_DIV_8 
  26:../src/SYSTICK_program.c **** 		SYSTICK->CTRL = 0;						/*Set STK cloclK to AHP/8 , Disable SysTick , Disable SysTick interrupt *
  31              		.loc 1 26 0
  32 0000 014B     		ldr	r3, .L2
  33 0002 0022     		movs	r2, #0
  34 0004 1A60     		str	r2, [r3]
  27:../src/SYSTICK_program.c **** 	
  28:../src/SYSTICK_program.c **** 	#else
  29:../src/SYSTICK_program.c **** 		#error("invalid choice")
  30:../src/SYSTICK_program.c **** 	
  31:../src/SYSTICK_program.c **** 	#endif
  32:../src/SYSTICK_program.c **** }
  35              		.loc 1 32 0
  36 0006 7047     		bx	lr
  37              	.L3:
  38              		.align	2
  39              	.L2:
  40 0008 10E000E0 		.word	-536813552
  41              		.cfi_endproc
  42              	.LFE0:
  44              		.section	.text.MSTK_voidSetBusyWait,"ax",%progbits
  45              		.align	1
  46              		.global	MSTK_voidSetBusyWait
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  50              		.fpu softvfp
  52              	MSTK_voidSetBusyWait:
  53              	.LFB1:
  33:../src/SYSTICK_program.c **** 
  34:../src/SYSTICK_program.c **** /* Synchronous function to delay for number of ticks */ 
  35:../src/SYSTICK_program.c **** void MSTK_voidSetBusyWait( u32 Copy_u32Ticks )
  36:../src/SYSTICK_program.c **** {
  54              		.loc 1 36 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.LVL0:
  37:../src/SYSTICK_program.c **** 	SYSTICK->LOAD = Copy_u32Ticks ;					// put Ticks to load register 
  60              		.loc 1 37 0
  61 0000 0A4B     		ldr	r3, .L6
  62 0002 5860     		str	r0, [r3, #4]
  38:../src/SYSTICK_program.c **** 	SET_BIT(SYSTICK->CTRL , 0) ;					// Enable SysTick Timer
  63              		.loc 1 38 0
  64 0004 1A68     		ldr	r2, [r3]
  65 0006 42F00102 		orr	r2, r2, #1
  66 000a 1A60     		str	r2, [r3]
  67              	.L5:
  39:../src/SYSTICK_program.c **** 	while (GET_BIT(SYSTICK->CTRL , 16) == 0) ;		// Wait till flag is raised
  68              		.loc 1 39 0 discriminator 1
  69 000c 074B     		ldr	r3, .L6
  70 000e 1B68     		ldr	r3, [r3]
  71 0010 13F4803F 		tst	r3, #65536
  72 0014 FAD0     		beq	.L5
  40:../src/SYSTICK_program.c **** 	u8 Local_u8Temporary = GET_BIT(SYSTICK->CTRL , 16) ;  //clear SysTick interrupt flag 
  73              		.loc 1 40 0
  74 0016 054B     		ldr	r3, .L6
  75 0018 1A68     		ldr	r2, [r3]
  76              	.LVL1:
  41:../src/SYSTICK_program.c **** 	CLR_BIT(SYSTICK->CTRL , 0) ;					// stop SysTick Timer
  77              		.loc 1 41 0
  78 001a 1A68     		ldr	r2, [r3]
  79 001c 22F00102 		bic	r2, r2, #1
  80 0020 1A60     		str	r2, [r3]
  42:../src/SYSTICK_program.c **** 	SYSTICK->VAL = 0;
  81              		.loc 1 42 0
  82 0022 0022     		movs	r2, #0
  83 0024 9A60     		str	r2, [r3, #8]
  43:../src/SYSTICK_program.c **** 	SYSTICK->LOAD = 0;
  84              		.loc 1 43 0
  85 0026 5A60     		str	r2, [r3, #4]
  44:../src/SYSTICK_program.c **** }
  86              		.loc 1 44 0
  87 0028 7047     		bx	lr
  88              	.L7:
  89 002a 00BF     		.align	2
  90              	.L6:
  91 002c 10E000E0 		.word	-536813552
  92              		.cfi_endproc
  93              	.LFE1:
  95              		.section	.text.MSTK_voidSetIntervalSingle,"ax",%progbits
  96              		.align	1
  97              		.global	MSTK_voidSetIntervalSingle
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 101              		.fpu softvfp
 103              	MSTK_voidSetIntervalSingle:
 104              	.LFB2:
  45:../src/SYSTICK_program.c **** 
  46:../src/SYSTICK_program.c **** 
  47:../src/SYSTICK_program.c **** /* Asynchronous function to execute a function only once time after number of ticks */ 
  48:../src/SYSTICK_program.c **** void MSTK_voidSetIntervalSingle( u32 Copy_u32Ticks , void (*Copy_Ptr) (void) )
  49:../src/SYSTICK_program.c **** {
 105              		.loc 1 49 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110              	.LVL2:
 111 0000 10B4     		push	{r4}
 112              		.cfi_def_cfa_offset 4
 113              		.cfi_offset 4, -4
  50:../src/SYSTICK_program.c **** 	CLR_BIT(SYSTICK->CTRL , 0) ;					// Disable SysTick Timer
 114              		.loc 1 50 0
 115 0002 0B4B     		ldr	r3, .L10
 116 0004 1A68     		ldr	r2, [r3]
 117 0006 22F00102 		bic	r2, r2, #1
 118 000a 1A60     		str	r2, [r3]
  51:../src/SYSTICK_program.c **** 	SYSTICK->VAL = 0;
 119              		.loc 1 51 0
 120 000c 0022     		movs	r2, #0
 121 000e 9A60     		str	r2, [r3, #8]
  52:../src/SYSTICK_program.c **** 	SYSTICK->LOAD = 0;
 122              		.loc 1 52 0
 123 0010 5A60     		str	r2, [r3, #4]
  53:../src/SYSTICK_program.c **** 	MSTK_u8ModeOfInterval = MSTK_SINGLE_INTERVAL ;	//set mode to single
 124              		.loc 1 53 0
 125 0012 084C     		ldr	r4, .L10+4
 126 0014 2270     		strb	r2, [r4]
  54:../src/SYSTICK_program.c **** 	MSTK_CallBack = Copy_Ptr ;							//Save callback
 127              		.loc 1 54 0
 128 0016 084A     		ldr	r2, .L10+8
 129 0018 1160     		str	r1, [r2]
  55:../src/SYSTICK_program.c **** 	SYSTICK->LOAD = Copy_u32Ticks ;					// put Ticks to load register 
 130              		.loc 1 55 0
 131 001a 5860     		str	r0, [r3, #4]
  56:../src/SYSTICK_program.c **** 	SET_BIT(SYSTICK->CTRL , 1) ;					// Enable SysTick interrupt when under flow (counts down till rea
 132              		.loc 1 56 0
 133 001c 1A68     		ldr	r2, [r3]
 134 001e 42F00202 		orr	r2, r2, #2
 135 0022 1A60     		str	r2, [r3]
  57:../src/SYSTICK_program.c **** 	SET_BIT(SYSTICK->CTRL , 0) ;					// Enable SysTick Timer
 136              		.loc 1 57 0
 137 0024 1A68     		ldr	r2, [r3]
 138 0026 42F00102 		orr	r2, r2, #1
 139 002a 1A60     		str	r2, [r3]
  58:../src/SYSTICK_program.c **** }
 140              		.loc 1 58 0
 141 002c 10BC     		pop	{r4}
 142              		.cfi_restore 4
 143              		.cfi_def_cfa_offset 0
 144 002e 7047     		bx	lr
 145              	.L11:
 146              		.align	2
 147              	.L10:
 148 0030 10E000E0 		.word	-536813552
 149 0034 00000000 		.word	MSTK_u8ModeOfInterval
 150 0038 00000000 		.word	.LANCHOR0
 151              		.cfi_endproc
 152              	.LFE2:
 154              		.section	.text.MSTK_voidSetIntervalPeriodic,"ax",%progbits
 155              		.align	1
 156              		.global	MSTK_voidSetIntervalPeriodic
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 160              		.fpu softvfp
 162              	MSTK_voidSetIntervalPeriodic:
 163              	.LFB3:
  59:../src/SYSTICK_program.c **** 
  60:../src/SYSTICK_program.c **** 
  61:../src/SYSTICK_program.c **** /* Asynchronous function to execute a function periodecally after number of ticks */ 
  62:../src/SYSTICK_program.c **** void MSTK_voidSetIntervalPeriodic( u32 Copy_u32Ticks , void (*Copy_Ptr) (void) )
  63:../src/SYSTICK_program.c **** {
 164              		.loc 1 63 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 169              	.LVL3:
  64:../src/SYSTICK_program.c **** 	MSTK_u8ModeOfInterval = MSTK_PERIOD_INTERVAL ;		//set mode to periodic
 170              		.loc 1 64 0
 171 0000 074B     		ldr	r3, .L13
 172 0002 0122     		movs	r2, #1
 173 0004 1A70     		strb	r2, [r3]
  65:../src/SYSTICK_program.c **** 	MSTK_CallBack = Copy_Ptr ;							//Save callback
 174              		.loc 1 65 0
 175 0006 074B     		ldr	r3, .L13+4
 176 0008 1960     		str	r1, [r3]
  66:../src/SYSTICK_program.c **** 	SYSTICK->LOAD = Copy_u32Ticks ;					// put Ticks to load register 
 177              		.loc 1 66 0
 178 000a 074B     		ldr	r3, .L13+8
 179 000c 5860     		str	r0, [r3, #4]
  67:../src/SYSTICK_program.c **** 	SET_BIT(SYSTICK->CTRL , 1) ;					// Enable SysTick interrupt when under flow (counts down till rea
 180              		.loc 1 67 0
 181 000e 1A68     		ldr	r2, [r3]
 182 0010 42F00202 		orr	r2, r2, #2
 183 0014 1A60     		str	r2, [r3]
  68:../src/SYSTICK_program.c **** 	SET_BIT(SYSTICK->CTRL , 0) ;					// Enable SysTick Timer
 184              		.loc 1 68 0
 185 0016 1A68     		ldr	r2, [r3]
 186 0018 42F00102 		orr	r2, r2, #1
 187 001c 1A60     		str	r2, [r3]
  69:../src/SYSTICK_program.c **** }
 188              		.loc 1 69 0
 189 001e 7047     		bx	lr
 190              	.L14:
 191              		.align	2
 192              	.L13:
 193 0020 00000000 		.word	MSTK_u8ModeOfInterval
 194 0024 00000000 		.word	.LANCHOR0
 195 0028 10E000E0 		.word	-536813552
 196              		.cfi_endproc
 197              	.LFE3:
 199              		.section	.text.MSTK_voidStopInterval,"ax",%progbits
 200              		.align	1
 201              		.global	MSTK_voidStopInterval
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 205              		.fpu softvfp
 207              	MSTK_voidStopInterval:
 208              	.LFB4:
  70:../src/SYSTICK_program.c **** 
  71:../src/SYSTICK_program.c **** 
  72:../src/SYSTICK_program.c **** /* function to stop the SysTick */
  73:../src/SYSTICK_program.c **** void MSTK_voidStopInterval(void)
  74:../src/SYSTICK_program.c **** {
 209              		.loc 1 74 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
  75:../src/SYSTICK_program.c **** 	SYSTICK->CTRL = 0;
 214              		.loc 1 75 0
 215 0000 024B     		ldr	r3, .L16
 216 0002 0022     		movs	r2, #0
 217 0004 1A60     		str	r2, [r3]
  76:../src/SYSTICK_program.c **** 	SYSTICK->VAL = 0;
 218              		.loc 1 76 0
 219 0006 9A60     		str	r2, [r3, #8]
  77:../src/SYSTICK_program.c **** 	SYSTICK->LOAD = 0;
 220              		.loc 1 77 0
 221 0008 5A60     		str	r2, [r3, #4]
  78:../src/SYSTICK_program.c **** }
 222              		.loc 1 78 0
 223 000a 7047     		bx	lr
 224              	.L17:
 225              		.align	2
 226              	.L16:
 227 000c 10E000E0 		.word	-536813552
 228              		.cfi_endproc
 229              	.LFE4:
 231              		.section	.text.MSTK_u32GetElapsedTime,"ax",%progbits
 232              		.align	1
 233              		.global	MSTK_u32GetElapsedTime
 234              		.syntax unified
 235              		.thumb
 236              		.thumb_func
 237              		.fpu softvfp
 239              	MSTK_u32GetElapsedTime:
 240              	.LFB5:
  79:../src/SYSTICK_program.c **** 
  80:../src/SYSTICK_program.c **** 
  81:../src/SYSTICK_program.c **** /* funtion to return number of counted Ticks == Value regiter - Load register */
  82:../src/SYSTICK_program.c **** u32 MSTK_u32GetElapsedTime(void)
  83:../src/SYSTICK_program.c **** {
 241              		.loc 1 83 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245              		@ link register save eliminated.
  84:../src/SYSTICK_program.c **** 	u32 Local_u32ElapsedTime;
  85:../src/SYSTICK_program.c **** 	
  86:../src/SYSTICK_program.c **** 	Local_u32ElapsedTime = SYSTICK->LOAD - SYSTICK->VAL ;
 246              		.loc 1 86 0
 247 0000 024B     		ldr	r3, .L19
 248 0002 5868     		ldr	r0, [r3, #4]
 249 0004 9B68     		ldr	r3, [r3, #8]
 250              	.LVL4:
  87:../src/SYSTICK_program.c **** 	
  88:../src/SYSTICK_program.c **** 	return Local_u32ElapsedTime;
  89:../src/SYSTICK_program.c **** }
 251              		.loc 1 89 0
 252 0006 C01A     		subs	r0, r0, r3
 253              	.LVL5:
 254 0008 7047     		bx	lr
 255              	.L20:
 256 000a 00BF     		.align	2
 257              	.L19:
 258 000c 10E000E0 		.word	-536813552
 259              		.cfi_endproc
 260              	.LFE5:
 262              		.section	.text.MSTK_u32GetRemainingTime,"ax",%progbits
 263              		.align	1
 264              		.global	MSTK_u32GetRemainingTime
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 268              		.fpu softvfp
 270              	MSTK_u32GetRemainingTime:
 271              	.LFB6:
  90:../src/SYSTICK_program.c **** 
  91:../src/SYSTICK_program.c **** 
  92:../src/SYSTICK_program.c **** /* funtion to return number of  Ticks remaining till interrupt happens = Value regiter */
  93:../src/SYSTICK_program.c **** u32 MSTK_u32GetRemainingTime(void)
  94:../src/SYSTICK_program.c **** {
 272              		.loc 1 94 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276              		@ link register save eliminated.
  95:../src/SYSTICK_program.c **** 	u32 Local_u32RemainTime;
  96:../src/SYSTICK_program.c **** 	
  97:../src/SYSTICK_program.c **** 	Local_u32RemainTime = SYSTICK->VAL  ;
 277              		.loc 1 97 0
 278 0000 014B     		ldr	r3, .L22
 279 0002 9868     		ldr	r0, [r3, #8]
 280              	.LVL6:
  98:../src/SYSTICK_program.c **** 	
  99:../src/SYSTICK_program.c **** 	return Local_u32RemainTime;
 100:../src/SYSTICK_program.c **** }
 281              		.loc 1 100 0
 282 0004 7047     		bx	lr
 283              	.L23:
 284 0006 00BF     		.align	2
 285              	.L22:
 286 0008 10E000E0 		.word	-536813552
 287              		.cfi_endproc
 288              	.LFE6:
 290              		.section	.text.SysTick_Handler,"ax",%progbits
 291              		.align	1
 292              		.global	SysTick_Handler
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 296              		.fpu softvfp
 298              	SysTick_Handler:
 299              	.LFB7:
 101:../src/SYSTICK_program.c **** 
 102:../src/SYSTICK_program.c **** 
 103:../src/SYSTICK_program.c **** 
 104:../src/SYSTICK_program.c **** /* ISR function of SysTick */
 105:../src/SYSTICK_program.c **** void SysTick_Handler(void)
 106:../src/SYSTICK_program.c **** {
 300              		.loc 1 106 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304 0000 08B5     		push	{r3, lr}
 305              		.cfi_def_cfa_offset 8
 306              		.cfi_offset 3, -8
 307              		.cfi_offset 14, -4
 107:../src/SYSTICK_program.c **** 	u8 Local_u8Temporary;
 108:../src/SYSTICK_program.c **** 	
 109:../src/SYSTICK_program.c **** 	if (MSTK_u8ModeOfInterval == MSTK_SINGLE_INTERVAL)
 308              		.loc 1 109 0
 309 0002 0A4B     		ldr	r3, .L27
 310 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 311 0006 5BB9     		cbnz	r3, .L25
 110:../src/SYSTICK_program.c **** 	{
 111:../src/SYSTICK_program.c **** 		/* Disable STK Interrupt */
 112:../src/SYSTICK_program.c **** 		CLR_BIT(SYSTICK->CTRL, 1);
 312              		.loc 1 112 0
 313 0008 094B     		ldr	r3, .L27+4
 314 000a 1A68     		ldr	r2, [r3]
 315 000c 22F00202 		bic	r2, r2, #2
 316 0010 1A60     		str	r2, [r3]
 113:../src/SYSTICK_program.c **** 		
 114:../src/SYSTICK_program.c **** 		/* Stop Timer */
 115:../src/SYSTICK_program.c **** 		CLR_BIT(SYSTICK->CTRL, 0);
 317              		.loc 1 115 0
 318 0012 1A68     		ldr	r2, [r3]
 319 0014 22F00102 		bic	r2, r2, #1
 320 0018 1A60     		str	r2, [r3]
 116:../src/SYSTICK_program.c **** 		SYSTICK -> LOAD = 0;
 321              		.loc 1 116 0
 322 001a 0022     		movs	r2, #0
 323 001c 5A60     		str	r2, [r3, #4]
 117:../src/SYSTICK_program.c **** 		SYSTICK -> VAL  = 0;
 324              		.loc 1 117 0
 325 001e 9A60     		str	r2, [r3, #8]
 326              	.L25:
 118:../src/SYSTICK_program.c **** 	}
 119:../src/SYSTICK_program.c **** 	
 120:../src/SYSTICK_program.c **** 	/* Callback notification */
 121:../src/SYSTICK_program.c **** 	MSTK_CallBack();
 327              		.loc 1 121 0
 328 0020 044B     		ldr	r3, .L27+8
 329 0022 1B68     		ldr	r3, [r3]
 330 0024 9847     		blx	r3
 331              	.LVL7:
 122:../src/SYSTICK_program.c **** 	
 123:../src/SYSTICK_program.c **** 	/* Clear interrupt flag */
 124:../src/SYSTICK_program.c **** 	Local_u8Temporary = GET_BIT(SYSTICK->CTRL,16);
 332              		.loc 1 124 0
 333 0026 024B     		ldr	r3, .L27+4
 334 0028 1B68     		ldr	r3, [r3]
 335              	.LVL8:
 125:../src/SYSTICK_program.c **** }
 336              		.loc 1 125 0
 337 002a 08BD     		pop	{r3, pc}
 338              	.L28:
 339              		.align	2
 340              	.L27:
 341 002c 00000000 		.word	MSTK_u8ModeOfInterval
 342 0030 10E000E0 		.word	-536813552
 343 0034 00000000 		.word	.LANCHOR0
 344              		.cfi_endproc
 345              	.LFE7:
 347              		.comm	MSTK_u8ModeOfInterval,1,1
 348              		.global	MSTK_CallBack
 349              		.section	.bss.MSTK_CallBack,"aw",%nobits
 350              		.align	2
 351              		.set	.LANCHOR0,. + 0
 354              	MSTK_CallBack:
 355 0000 00000000 		.space	4
 356              		.text
 357              	.Letext0:
 358              		.file 2 "../include/STD_TYPES.h"
 359              		.file 3 "../include/SYSTICK_private.h"
DEFINED SYMBOLS
                            *ABS*:00000000 SYSTICK_program.c
C:\Users\ahmed\AppData\Local\Temp\ccpR29uf.s:16     .text.MSTK_voidInit:00000000 $t
C:\Users\ahmed\AppData\Local\Temp\ccpR29uf.s:23     .text.MSTK_voidInit:00000000 MSTK_voidInit
C:\Users\ahmed\AppData\Local\Temp\ccpR29uf.s:40     .text.MSTK_voidInit:00000008 $d
C:\Users\ahmed\AppData\Local\Temp\ccpR29uf.s:45     .text.MSTK_voidSetBusyWait:00000000 $t
C:\Users\ahmed\AppData\Local\Temp\ccpR29uf.s:52     .text.MSTK_voidSetBusyWait:00000000 MSTK_voidSetBusyWait
C:\Users\ahmed\AppData\Local\Temp\ccpR29uf.s:91     .text.MSTK_voidSetBusyWait:0000002c $d
C:\Users\ahmed\AppData\Local\Temp\ccpR29uf.s:96     .text.MSTK_voidSetIntervalSingle:00000000 $t
C:\Users\ahmed\AppData\Local\Temp\ccpR29uf.s:103    .text.MSTK_voidSetIntervalSingle:00000000 MSTK_voidSetIntervalSingle
C:\Users\ahmed\AppData\Local\Temp\ccpR29uf.s:148    .text.MSTK_voidSetIntervalSingle:00000030 $d
                            *COM*:00000001 MSTK_u8ModeOfInterval
C:\Users\ahmed\AppData\Local\Temp\ccpR29uf.s:155    .text.MSTK_voidSetIntervalPeriodic:00000000 $t
C:\Users\ahmed\AppData\Local\Temp\ccpR29uf.s:162    .text.MSTK_voidSetIntervalPeriodic:00000000 MSTK_voidSetIntervalPeriodic
C:\Users\ahmed\AppData\Local\Temp\ccpR29uf.s:193    .text.MSTK_voidSetIntervalPeriodic:00000020 $d
C:\Users\ahmed\AppData\Local\Temp\ccpR29uf.s:200    .text.MSTK_voidStopInterval:00000000 $t
C:\Users\ahmed\AppData\Local\Temp\ccpR29uf.s:207    .text.MSTK_voidStopInterval:00000000 MSTK_voidStopInterval
C:\Users\ahmed\AppData\Local\Temp\ccpR29uf.s:227    .text.MSTK_voidStopInterval:0000000c $d
C:\Users\ahmed\AppData\Local\Temp\ccpR29uf.s:232    .text.MSTK_u32GetElapsedTime:00000000 $t
C:\Users\ahmed\AppData\Local\Temp\ccpR29uf.s:239    .text.MSTK_u32GetElapsedTime:00000000 MSTK_u32GetElapsedTime
C:\Users\ahmed\AppData\Local\Temp\ccpR29uf.s:258    .text.MSTK_u32GetElapsedTime:0000000c $d
C:\Users\ahmed\AppData\Local\Temp\ccpR29uf.s:263    .text.MSTK_u32GetRemainingTime:00000000 $t
C:\Users\ahmed\AppData\Local\Temp\ccpR29uf.s:270    .text.MSTK_u32GetRemainingTime:00000000 MSTK_u32GetRemainingTime
C:\Users\ahmed\AppData\Local\Temp\ccpR29uf.s:286    .text.MSTK_u32GetRemainingTime:00000008 $d
C:\Users\ahmed\AppData\Local\Temp\ccpR29uf.s:291    .text.SysTick_Handler:00000000 $t
C:\Users\ahmed\AppData\Local\Temp\ccpR29uf.s:298    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\ahmed\AppData\Local\Temp\ccpR29uf.s:341    .text.SysTick_Handler:0000002c $d
C:\Users\ahmed\AppData\Local\Temp\ccpR29uf.s:354    .bss.MSTK_CallBack:00000000 MSTK_CallBack
C:\Users\ahmed\AppData\Local\Temp\ccpR29uf.s:350    .bss.MSTK_CallBack:00000000 $d
                           .group:00000000 wm4.0.c450a18b2a29049e2cbb4137d58ca9b1
                           .group:00000000 wm4.BIT_MATH.h.8.e5e1c22317042a824b84ac5f7a29c479
                           .group:00000000 wm4.SYSTICK_config.h.8.8a0e0ab84b67087bd940ae3d6aa22d24
                           .group:00000000 wm4.SYSTICK_private.h.8.46b3af080e662b09baec029ead85e043

NO UNDEFINED SYMBOLS
